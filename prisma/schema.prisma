// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SuperAdmin {
  id        String   @id @default(uuid())
  username  String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  email     String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("super_admin")
}

enum UserRole {
  ADMINGUDANG
  APOTEKER
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      UserRole
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  inventories  Inventory[]
  transactions Transaction[]

  @@map("users")
}

model Product {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  price       Decimal  @db.Decimal(10, 2)
  expiry_date DateTime
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category_id String
  Category    Category @relation(fields: [category_id], references: [id])

  supplier_id String
  Supplier    Supplier @relation(fields: [supplier_id], references: [id])

  inventories  Inventory[]
  transactions Transaction[]
  images       ProductImage[]

  @@map("products")
}

model Category {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  products Product[]

  @@map("categories")
}

model Supplier {
  id        String   @id @default(uuid())
  name      String
  contact   String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]

  @@map("suppliers")
}

model Transaction {
  id               String   @id @default(uuid())
  product_id       String
  quantity         Int
  total_price      Decimal
  transaction_date DateTime @default(now())
  user_id          String
  User             User     @relation(fields: [user_id], references: [id])

  Product Product @relation(fields: [product_id], references: [id])

  @@map("transactions")
}

model Inventory {
  id           String   @id @default(uuid())
  product_id   String
  quantity     Int
  location     String
  warehouse_id String
  note         String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  created_by   String

  Product   Product   @relation(fields: [product_id], references: [id])
  Warehouse Warehouse @relation(fields: [warehouse_id], references: [id])
  User      User      @relation(fields: [created_by], references: [id])

  @@map("inventories")
}

model Warehouse {
  id          String   @id @default(uuid())
  name        String
  description String?
  status      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  inventories Inventory[]

  @@map("warehouse")
}

model ProductImage {
  id        String   @id @default(uuid())
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product_id String
  Product    Product @relation(fields: [product_id], references: [id])

  @@map("product_images")
}

model Role {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      Boolean  @default(true)

  @@map("roles")
}
